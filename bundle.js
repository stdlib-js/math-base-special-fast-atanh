// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
!function(n,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(n="undefined"!=typeof globalThis?globalThis:n||self).atanh=t()}(this,(function(){"use strict";var n=Number.POSITIVE_INFINITY,t=Number.NEGATIVE_INFINITY,r=n,o=t;var e=function(n){return n===r||n===o};var i=function(n){return n!=n};var u=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var f=function(){return u&&"symbol"==typeof Symbol.toStringTag},a=Object.prototype.toString,c=a;var y=function(n){return c.call(n)},l=Object.prototype.hasOwnProperty;var v=function(n,t){return null!=n&&l.call(n,t)},p="function"==typeof Symbol?Symbol.toStringTag:"",A=v,b=p,U=a;var d=y,m=function(n){var t,r,o;if(null==n)return U.call(n);r=n[b],t=A(n,b);try{n[b]=void 0}catch(t){return U.call(n)}return o=U.call(n),t?n[b]=r:delete n[b],o},w=f()?m:d,s=w,h="function"==typeof Uint32Array;var N="function"==typeof Uint32Array?Uint32Array:null,F=function(n){return h&&n instanceof Uint32Array||"[object Uint32Array]"===s(n)},I=N;var S=function(){var n,t;if("function"!=typeof I)return!1;try{t=new I(t=[1,3.14,-3.14,4294967296,4294967297]),n=F(t)&&1===t[0]&&3===t[1]&&4294967293===t[2]&&0===t[3]&&1===t[4]}catch(t){n=!1}return n};var T="function"==typeof Uint32Array?Uint32Array:void 0,g=function(){throw new Error("not implemented")},j=S()?T:g,E=w,O="function"==typeof Float64Array;var x="function"==typeof Float64Array?Float64Array:null,P=function(n){return O&&n instanceof Float64Array||"[object Float64Array]"===E(n)},V=x;var Y=function(){var n,t;if("function"!=typeof V)return!1;try{t=new V([1,3.14,-3.14,NaN]),n=P(t)&&1===t[0]&&3.14===t[1]&&-3.14===t[2]&&t[3]!=t[3]}catch(t){n=!1}return n};var _="function"==typeof Float64Array?Float64Array:void 0,G=function(){throw new Error("not implemented")},k=Y()?_:G,q=w,z="function"==typeof Uint8Array;var B="function"==typeof Uint8Array?Uint8Array:null,C=function(n){return z&&n instanceof Uint8Array||"[object Uint8Array]"===q(n)},D=B;var H=function(){var n,t;if("function"!=typeof D)return!1;try{t=new D(t=[1,3.14,-3.14,256,257]),n=C(t)&&1===t[0]&&3===t[1]&&253===t[2]&&0===t[3]&&1===t[4]}catch(t){n=!1}return n};var J="function"==typeof Uint8Array?Uint8Array:void 0,K=function(){throw new Error("not implemented")},L=H()?J:K,M=w,Q="function"==typeof Uint16Array;var R="function"==typeof Uint16Array?Uint16Array:null,W=function(n){return Q&&n instanceof Uint16Array||"[object Uint16Array]"===M(n)},X=R;var Z=function(){var n,t;if("function"!=typeof X)return!1;try{t=new X(t=[1,3.14,-3.14,65536,65537]),n=W(t)&&1===t[0]&&3===t[1]&&65533===t[2]&&0===t[3]&&1===t[4]}catch(t){n=!1}return n};var $,nn="function"==typeof Uint16Array?Uint16Array:void 0,tn=function(){throw new Error("not implemented")},rn={uint16:Z()?nn:tn,uint8:L};($=new rn.uint16(1))[0]=4660;var on=52===new rn.uint8($.buffer)[0],en=j,un=!0===on?1:0,fn=new k(1),an=new en(fn.buffer);var cn=function(n){return fn[0]=n,an[un]},yn=j,ln=!0===on?1:0,vn=new k(1),pn=new yn(vn.buffer);var An=function(n,t){return vn[0]=n,pn[ln]=t>>>0,vn[0]};var bn=cn,Un=An,dn=i,mn=t,wn=function(n){return 0===n?.3999999999940942:.3999999999940942+n*(.22222198432149784+.15313837699209373*n)},sn=function(n){return 0===n?.6666666666666735:.6666666666666735+n*(.2857142874366239+n*(.1818357216161805+.14798198605116586*n))},hn=.6931471803691238,Nn=1.9082149292705877e-10,Fn=1048575;var In=e,Sn=i,Tn=function(n){var t,r,o,e,i,u,f,a,c,y,l;return 0===n?mn:dn(n)||n<0?NaN:(e=0,(r=bn(n))<1048576&&(e-=54,r=bn(n*=0x40000000000000)),r>=2146435072?n+n:(e+=(r>>20)-1023|0,e+=(f=(r&=Fn)+614244&1048576|0)>>20|0,u=(n=Un(n,r|1072693248^f))-1,(Fn&2+r)<3?0===u?0===e?0:e*hn+e*Nn:(i=u*u*(.5-.3333333333333333*u),0===e?u-i:e*hn-(i-e*Nn-u)):(f=r-398458|0,a=440401-r|0,o=(y=(l=(c=u/(2+u))*c)*l)*wn(y),i=l*sn(y)+o,(f|=a)>0?(t=.5*u*u,0===e?u-(t-c*(t+i)):e*hn-(t-(c*(t+i)+e*Nn)-u)):0===e?u-c*(u-i):e*hn-(c*(u-i)-e*Nn-u))))};return function(n){return 0===n?n:Sn(n)||In(n)?NaN:.5*Tn((1+n)/(1-n))}}));
//# sourceMappingURL=bundle.js.map
